import pyrogram
from bitrix24 import BitrixError
from loguru import logger
from pyrogram import Client, filters
from pyrogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

from integrations.bitrix.bitrix_api import Bitrix24
from modules.audio_processor import process_audio
from modules.audiofile import Audiofile
from data.models import User, Integration, Task
from modules.json_processor.json_processor import process_json
from telegram_bot.helpers import txt
from telegram_bot.helpers.crm import create_bitrix_contact_and_deal
from telegram_bot.helpers.filters import audio_video_filter, admin_filter, json_filter
import config.config as cfg
import traceback


# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–∏–∞–ª–æ–≥–æ–≤ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏. –ö–ª—é—á–∏ ‚Äì tg_id.
# https://stackoverflow.com/a/70154780
user_context = {}

class AppStates:
    REQUEST_PHONE = 1
    RECEIVE_PHONE = 2


@Client.on_message(~filters.bot & audio_video_filter, group=20)
def audio_handler(cli: Client, message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
    """
    tg_id = message.from_user.id
    db_user: User = User.get_or_none(tg_id=tg_id)
    message_with_audio = message

    if not db_user:
        cli.send_message(tg_id, txt.error_no_db_user)
        return

    # –ù—É–∂–Ω–æ –ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –∞–Ω–∞–ª–∏–∑–æ–º –∞—É–¥–∏–æ.
    request_phone = False

    user_tasks = Task.select().where(Task.user == db_user)
    if user_tasks.count() == 0:
        integration = Integration.get_or_none(Integration.id == cfg.BITRIX24_RECHKA_INTEGRATION_ID)
        webhook_url = integration.get_decrypted_access_field('webhook_url')
        bx24 = Bitrix24(webhook_url)
        try:
            contacts = bx24.get_contact_list(cfg.BITRIX24_CONTACT_TG_ID_FIELD_NAME, db_user.tg_id)
        except BitrixError:
            # –ù–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–≤–æ–Ω–æ–∫.
            pass
        else:
            if len(contacts) == 0:
                request_phone = True

    if request_phone:
        logger.info('–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –ø–µ—Ä–µ–¥ –∞–Ω–∞–ª–∏–∑–æ–º –∞—É–¥–∏–æ.')
        keyboard = ReplyKeyboardMarkup(
            [[KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', request_contact=True)]],
            resize_keyboard=True
        )
        message.reply('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', reply_markup=keyboard)
        user_context[db_user.tg_id] = AppStates.REQUEST_PHONE
    else:
        try:
            info_message: Message = message_with_audio.reply("üíæ –°–∫–∞—á–∏–≤–∞—é –∞—É–¥–∏–æ—Ñ–∞–π–ª")
            audio = Audiofile().load_from_tg_message_with_audio(cli, message_with_audio)
            # –î–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å–ø–∏—Å–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞.
            db_user: User = User.get_or_none(tg_id=tg_id)
            process_audio(audio, cli, message_with_audio, db_user, info_message)

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–≤–æ–Ω–∫–∞: {e}")
            cli.send_message(tg_id, txt.error_try_again)
            cli.send_message(cfg.ERROR_CHAT_ID, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞—É–¥–∏–æ–∑–∞–ø–∏—Å–∏:\n{traceback.format_exc()}")
            raise

    raise pyrogram.StopPropagation


@Client.on_message(~filters.bot & filters.contact)
def contact_handler(cli: Client, message: Message):
    tg_id = message.from_user.id

    if user_context[tg_id] == AppStates.REQUEST_PHONE:
        user_context[tg_id] = AppStates.RECEIVE_PHONE

        db_user = User.get(tg_id=tg_id)

        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        phone_number = message.contact.phone_number
        username = message.from_user.username

        logger.info(f'–°–æ–∑–¥–∞–µ–º –ö–æ–Ω—Ç–∞–∫—Ç –∏ –°–¥–µ–ª–∫—É –≤ –ë–∏—Ç—Ä–∏–∫—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram tg_id={db_user.tg_id=}.')
        try:
            contact_id, deal_id = create_bitrix_contact_and_deal(db_user,
                                                                 phone_number,
                                                                 username=username,
                                                                 raise_on_exists=True)
        except Exception as ex:
            logger.error(f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É –∏–ª–∏ –∫–æ–Ω—Ç–∞–∫—Ç –≤ –ë–∏—Ç—Ä–∏–∫—Å24 –¥–ª—è '
                         f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram tg_id={db_user.tg_id=}. –û—à–∏–±–∫–∞: {ex}')
        else:
            logger.info(f'–°–æ–∑–¥–∞–Ω—ã –∫–∞—Ä—Ç–æ—á–∫–∏ –ö–æ–Ω—Ç–∞–∫—Ç–∞ (ID {contact_id}) –∏ –°–¥–µ–ª–∫–∏ (ID {deal_id}) –¥–ª—è '
                        f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram tg_id={db_user.tg_id}.')
            cli.send_message(db_user.tg_id,
                             '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–≤–æ–Ω–∫–∏. '
                             '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –ø–æ–≤—Ç–æ—Ä–Ω–æ.',
                             reply_markup=ReplyKeyboardRemove())

    else:
        logger.info('–ü–æ–ª—É—á–∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–æ—Ç–µ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.')


@Client.on_message(~filters.bot & admin_filter & json_filter, group=30)
def admin_json_handler(cli: Client, message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏—Å–ª–∞–Ω–Ω–æ–≥–æ json —Ñ–∞–π–ª–∞ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞. –¢–æ–ª—å–∫–æ –¥–ª—è –ê–î–ú–ò–ù–û–í.
    """
    process_json(message)

    raise pyrogram.StopPropagation
